// mixins


// mixins bsx-appnav navbar



// devide mobile & desktop nav

@mixin bsx-appnav-navigation($media-size) {

	@if $bsx-appnav-nav-devide-mobile-desktop {

		@if $media-size == mobile {
			@include bsx-media-breakpoint-down($bsx-appnav-nav-breakpoint-mobile-down) { @content }
		}
		@else {
			@include bsx-media-breakpoint-up($bsx-appnav-nav-breakpoint-desktop-up) { @content }
		}

	}

	@else {
		@if $media-size == mobile { 
			@content
		}
	}
	
}


// responsive padding y

@mixin make-responsive-nav-padding($paddings-y: $bsx-appnav-level-1-link-responsive-py) {

	// remember size of previous screen interval
	$remember-padding-y: "";

	@each $breakpoint, $padding-y in $paddings-y {

		// make style only if current screen interval has different size
		@if $padding-y != $remember-padding-y {
			@include bsx-media-breakpoint-up($breakpoint) {
				padding-top: $padding-y;
				padding-bottom: $padding-y;
			}
			$remember-padding-y: $padding-y;
		}

	}

}


// NAVBAR NAV MIXINS (make mobile or desktop looking navbar nav)

// mobile

@mixin make-mobile-looking-navbar-nav() {

	li {

		> a {
			color: $bsx-appnav-color;
			text-decoration: $bsx-appnav-link-text-decoration;
		}

		&.active > a {
			color: $bsx-appnav-active-color;
			@if $bsx-appnav-use-active-inverse-bg {
				background-color: $bsx-appnav-nav-link-mobile-hover-bg-color;
			}

			// icon hover style

			&::after {
				color: $bsx-appnav-icon-hover-color;
			}
		}

		ul {
			display: none;
			list-style: none;
		}

		&.show > ul {
			display: block;
		}

	}

	// nav toggle
	.bsx-appnav-dropdown-toggle {
		&::after {
			float: right;
		}
	}
	
}

// desktop

@mixin make-desktop-looking-navbar-nav() {
	
	li {
		a {
			@include bsx-hover-focus {
				background-color: $bsx-appnav-nav-desktop-level-1-hover-link-bg-color;
			}
		}

		&.show {
			> ul {
				display: block;
			}
		}
	}

	// only level 1

	> li {
		display: inline-flex;

		&:not(.bsx-appnav-bigmenu-dropdown) {
			ul {
				a {
					white-space: nowrap;
					width: 100%;
				}
			}
		}

		// link (level 1)
		& > a {
			white-space: nowrap;

			@include bsx-hover-focus {
				color: $bsx-appnav-hover-color;
			}
		}

		> ul {

			// level 2

			top: 100%;
			left: 0;
			padding: $bsx-appnav-desktop-dropdown-py $bsx-appnav-desktop-dropdown-px;
			clip: rect(0px, 100000px, 100000px, -1000px);

			// TODO: what about menu overflows screen?

			ul {

				// level 3..n

				top: -$bsx-appnav-desktop-level-3-dropdown-pt;
				left: 100%;
				padding: $bsx-appnav-desktop-level-3-dropdown-pt $bsx-appnav-desktop-dropdown-px $bsx-appnav-desktop-dropdown-py;
			}
		}

		&.bsx-appnav-bigmenu-dropdown {
			> ul {
				// avoid overflow while positioned fixed
				max-height: $bsx-appnav-desktop-level-1-dropdown-max-height;
				overflow: auto;
			}
		}

	}
	> li,
	li:not(.bsx-appnav-bigmenu-dropdown) li {

		> ul {
			//display: none;
			position: absolute;
			z-index: $bsx-dropdown-z-index;
			list-style: none;
			min-width: $bsx-dropdown-min-width;
			margin: 0;
			background-color: $bsx-appnav-nav-desktop-level-1-hover-link-bg-color;
			box-shadow: $bsx-appnav-dropdown-box-shadow;
		}

		> ul.ul-right {
			left: auto;
			right: 0;
		}

	}

	@if $bsx-appnav-use-desktop-level-1-active-link-underline or $bsx-appnav-use-desktop-level-1-active-disable-inverse-bg {

		// do not colorize text on active level 1 
		// do not invert bg on active level 1

		// only level 2..n

		li {
			ul > li.active > a {

				@if $bsx-appnav-use-inverse-color { 
					// use inverse color
					color: $bsx-appnav-color;
				}
				@else {
					// use basic color
					color: $bsx-appnav-active-color;
				}
				@if $bsx-appnav-use-active-inverse-bg {
					background-color: $bsx-appnav-nav-desktop-level-2-hover-link-bg-color;
				}
			}
		}

	}
	@else {

		// not use current link underline (use hover styles for current link, adapt to each desktop level)

		// all levels

		li.active > a {

			@if $bsx-appnav-use-inverse-color { 
				// use inverse color
				color: $bsx-appnav-color;
			}
			@else {
				// use basic color
				color: $bsx-appnav-active-color;
			}
		}

		// only level 1

		li.active > a {
			@if $bsx-appnav-use-active-inverse-bg {
				background-color: $bsx-appnav-nav-desktop-level-1-hover-link-bg-color;
			}
		}

		// only level 2..n

		li {
			ul > li.active > a {
				@if $bsx-appnav-use-active-inverse-bg {
					background-color: $bsx-appnav-nav-desktop-level-2-hover-link-bg-color;
				}
			}
		}

	}

	> li ul > li {

		//> ul > li ul {
			// hide level 4..
			//display: none;
		//}

		> a {

			// check if inverse color

			@if $bsx-appnav-use-inverse-color { 
				// use inverse color
				color: $bsx-appnav-hover-color;

				@include bsx-hover-focus {
					color: $bsx-appnav-color !important;
				}
			}
			@else {
				// use basic color
				@include bsx-hover-focus {
					color: $bsx-appnav-hover-color;
				}
			}

			@include bsx-hover-focus {
				//color: $bsx-appnav-hover-color;
				background-color: $bsx-appnav-nav-desktop-level-2-hover-link-bg-color;
			}

			&.bsx-appnav-dropdown-toggle {
				&::after {
					content: $bsx-appnav-caret-right-icon;
					float: right;
					margin-top: $bsx-appnav-caret-right-mt;
				}
			}
		}

	}

	// only bigmenu
	> li.bsx-appnav-bigmenu-dropdown {

		> ul {
			width: 100%;

			> li {

				.bsx-appnav-dropdown-toggle {
					&::after {
						content: "";
					}
				} 

				// only level 3
				> ul > li {

					> a {
						padding-left: $bsx-appnav-desktop-bigmenu-level-3-link-pl !important;
					}

				}

			}
		}

    }

	li:not(.bsx-appnav-bigmenu-dropdown) {

		position: relative;

	}

	// back button
	.nav-item-back {
		display: none;
	}

	// nav toggle
	.bsx-appnav-dropdown-toggle {
		&::after {
			content: $bsx-appnav-caret-down-icon;
			font-size: $bsx-appnav-caret-font-size;
			width: $bsx-appnav-caret-width;
			margin-left: $bsx-appnav-link-text-caret-spacer;
			color: inherit;
		}
	}

}






